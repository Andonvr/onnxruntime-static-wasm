name: Test Build

on:
  workflow_dispatch: # lets you run a build from github.com
  # Runs the workflow on push events but only for the develop branch
  push:
    branches:
      - main
    # This is needed otherwise the github.ref is not set with ref/tags/v...
    tags:
      - 'v*.*.*'

# When pushing new commits, cancel any running builds on that branch
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  SOME_ENV: HelloWorld

jobs:
  echo:
    name: ${{ matrix.version }} - ${{ matrix.var }}
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        version: [1, 2, 69]
        var: [foo, bar]

    steps:
      # A simple printout of the matrix
      - name: printout
        shell: bash
        run: |
          echo ${{ github.ref }}
          echo "matrix.version=${{ matrix.version }}";
          echo "matrix.var=${{ matrix.var }}";

      # With this we checkout to our repo
      - name: get repo and submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive' # This will checkout all submodules recursively

      # Declaring the product name and the packaging directory
      - name: declare artefact variables
        shell: bash
        run: |
          echo "PACKAGE_DIR=${{ env.SOME_ENV }}-${{ matrix.version}}-${{ matrix.var}}" >> $GITHUB_ENV
          echo "PRODUCT_NAME=${{ env.SOME_ENV }}-${{ matrix.version }}-${{ matrix.var}}" >> $GITHUB_ENV

      # Moving the artefacts to a packaging directory
      - name: move artefacts
        shell: bash
        run: |
          mkdir -p ${{ env.PACKAGE_DIR }}
          echo "${{ env.SOME_ENV }} | ${{ matrix.version}} | ${{ matrix.var}}" > ${{ env.PACKAGE_DIR }}/newfile.txt

      # Zip the artefact
      - name: zip artefacts
        shell: bash
        run: |
          zip -r ${{ env.PRODUCT_NAME }}.zip ${{ env.PACKAGE_DIR }}/

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}.zip
          path: ${{ env.PRODUCT_NAME }}.zip

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Get Artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            */*.zip
